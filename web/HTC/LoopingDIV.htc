<PUBLIC:COMPONENT tagname="loopingDIV" lightweight="true" xmlns:PUBLIC="http://public.w3c.org">
<PUBLIC:PROPERTY NAME="useAlphaImageLoader" value="true" />
<PUBLIC:PROPERTY NAME="divWidthPX" />
<PUBLIC:PROPERTY NAME="scrollIncrementPX" value="15" />
<PUBLIC:PROPERTY NAME="gutterPX" value="35" />
<PUBLIC:PROPERTY NAME="cellGapPX" value="42" />
<PUBLIC:PROPERTY NAME="scrollFreqMS" value="1" />
<PUBLIC:PROPERTY NAME="hasInitialFocus" value="false" />
<PUBLIC:PROPERTY NAME="initialScrollCellIndex" value="0" />
<PUBLIC:PROPERTY NAME="InternalGutterWidth" value="34" />
<PUBLIC:PROPERTY NAME="cellContent" get="get_CellContent" />
<PUBLIC:METHOD NAME="AddCellHTML" />
<PUBLIC:METHOD NAME="ClearAll" />
<PUBLIC:METHOD NAME="focus" />
<PUBLIC:METHOD NAME="scrollLeft" />
<PUBLIC:METHOD NAME="scrollRight" />
<PUBLIC:ATTACH EVENT="oncontentready" HANDLER="OnInit" />
<PUBLIC:ATTACH EVENT="onkeydown" HANDLER="OnKeydownHandler" />
<PUBLIC:ATTACH EVENT="ondocumentready" HANDLER="OnDocReady" />
<PUBLIC:DEFAULTS style="overflow:hidden;" />

<SCRIPT>

		var CELL_TAG = "cellTag";
		
		var KEY_LEFT	= 37;
		var KEY_RIGHT	= 39;
		var KEY_TAB		= 9;

		
		var IMAGE_1x1TRANSGIF_URL = "/Common/Images/1x1.gif";
		var IMAGE_LEFTARROW_URL   = "/Shared/Images/ScrollIndicatorLeftGlobal.png";
		var IMAGE_RIGHTARROW_URL  = "/Shared/Images/ScrollIndicatorRightGlobal.png";

		
		var SCROLL_LEFT = -1;
		var SCROLL_RIGHT = 1;
		
		var scrollListTable;
		var movingCell = false;				
		var bInit = false;					

		function OnInit()
		{
			if (currentStyle.useAlphaImageLoader)
				useAlphaImageLoader = currentStyle.useAlphaImageLoader;

			divWidthPX = divWidthPX;
			InternalGutterWidth = InternalGutterWidth;

			if (currentStyle.scrollIncrementPX)
				scrollIncrementPX = parseInt(currentStyle.scrollIncrementPX);
			else
				scrollIncrementPX = parseInt(scrollIncrementPX);
			
			if (currentStyle.scrollFreqMS)
				scrollFreqMS = parseInt(currentStyle.scrollFreqMS);
			else
				scrollFreqMS = parseInt(scrollFreqMS);
				
			if (currentStyle.gutterPX)
				gutterPX = parseInt(currentStyle.gutterPX);
			else
				gutterPX = parseInt(gutterPX);

			if (currentStyle.hasInitialFocus)
				hasInitialFocus = (currentStyle.hasInitialFocus.toLowerCase() == "true");
			else
				hasInitialFocus = (hasInitialFocus.toLowerCase() == "true");
				
			if (currentStyle.initialScrollCellIndex)
				initialScrollCellIndex = currentStyle.initialScrollCellIndex;
				
			if (divWidthPX == null)
			{
				style.cssText ="width:340; height:30; padding:5px; font-family:arial; font-size:14; border: 2 solid #c1c1c1;";
				var str = "<div >You must specify <b><font color=red>divWidthPX</font></b> in &lt;loopingDIV> tag</div>";
				innerHTML = str;
				bInit = false;
			}
			else
			{			
				var str = "<div><table id=topTable cellspacing=0 cellpadding=0>";
				
				str+="<td valign=top style='padding-top:25px;'><img height=1 src='"+IMAGE_1x1TRANSGIF_URL+"' width="+InternalGutterWidth+">";
				str+="<div style='width:18; height:18; behavior:url(#default#alphaImageLoader); src:"+IMAGE_LEFTARROW_URL+";' tabIndex='-10001' onclick='"+uniqueID+".scrollLeft();'></div></td>";
				
				str+="<td><div id=scrollListTable style='overflow-x:hidden; width:"+(parseInt(divWidthPX)-2*InternalGutterWidth)+"; white-space:nowrap;'></div></td>";
				
				str+="<td valign=top  style='padding-top:25px;'><img height=1 src='"+IMAGE_1x1TRANSGIF_URL+"' width="+InternalGutterWidth+">";
				str+="<div style='width:18; height:18; behavior:url(#default#alphaImageLoader); src:"+IMAGE_RIGHTARROW_URL+";' tabIndex='-10001' onclick='"+uniqueID+".scrollRight();'></div></td>";
				
				str+="</table></div>";

				innerHTML = str;
				scrollListTable = all["scrollListTable"];
				bInit = true;
			}
		}
		
		function OnDocReady()
		{
			
			if (bInit && 
				initialScrollCellIndex > 0 && 
				initialScrollCellIndex < getCellCount())
			setInitialScroll();
		}

		
		function focus()
		{
			var span = scrollListTable.all[CELL_TAG+initialScrollCellIndex];
			span.focus();
		}

		function setInitialScroll()
		{
			var pixelToScroll = 0;
		
			
			for (var i = 0; i < initialScrollCellIndex; i++)
				pixelToScroll += getCell(i).clientWidth;

			var span = scrollListTable.all[CELL_TAG+initialScrollCellIndex];

			
			if (span && scrollListTable.scrollWidth - pixelToScroll >= scrollListTable.clientWidth)
			{
				
				scrollListTable.scrollLeft = pixelToScroll;

				
				if (scrollListTable.scrollLeft == 0 && pixelToScroll > 0)
				{
					window.setTimeout(setInitialScroll, 1);
					return;
				}
				if (hasInitialFocus)
					span.focus();
			}
		}
		
		function AddCellHTML(cellHTML, width, height)
		{	
			if (!bInit)
				return;
		
			var numChildren = getCellCount();

			var str = "<SPAN ID='"+CELL_TAG+numChildren+"' nextLeft='"+(numChildren > 0 ? CELL_TAG+(numChildren-1) : "")+"' ";
			str+= "nextRight='"+CELL_TAG+"0' onfocus=this.firstChild.focus()>";
						
			var cell = element.document.createElement(str);
			cell.style.display = "inline-block";
			if (width != null)
				cell.style.width = width;
			if (width != null)
				cell.style.height = height;
			scrollListTable.appendChild(cell);
			
			var innerCell = element.document.createElement("SPAN");
			cell.appendChild(innerCell);
			cell.innerHTML = cellHTML;			
			
			if (numChildren > 0)
			{
				var lastCell = getCell(numChildren-1);
				var attr = element.document.createAttribute("nextRight");
				attr.value = cell.id;
				lastCell.attributes.setNamedItem(attr);
			}
		}
		
		function ClearAll()
		{
			scrollListTable.innerHTML = "";
		}
		
		function OnKeydownHandler()
		{
			var handled = false;
			var srcNode = event.srcElement;
		
			if (srcNode.id.indexOf(CELL_TAG) == -1)
				srcNode = srcNode.parentNode;

			if (!movingCell)
			{
				
				var k = event.keyCode;
				if (k == KEY_TAB)
				{
					if (event.shiftKey)
						k = KEY_LEFT;
					else
						k = KEY_RIGHT;
				}
			
				switch(k)
				{
					case KEY_LEFT:

						movingCell = true;
						var nextLeft = srcNode.attributes.getNamedItem("nextleft");
						if (nextLeft)
						{
							var nextSpan = all[nextLeft.value];	
							if (nextSpan && nextSpan.attributes.getNamedItem("nextleft").value != "")
							{
								var col = nextSpan.all.tags("a");
								if (col == null)
									nextSpan.focus();
								else
									col[0].focus();
								movingCell = false;
							}
							else
							{
								var gap = (scrollListTable.scrollLeft == srcNode.offsetLeft ? 0 : gutterPX);
									
								moveCellToTheOtherEnd(getCellCount()-1);
								
								scrollListTable.scrollLeft = getCell(2).offsetLeft - gap;
								scroll(SCROLL_LEFT, getCell(1).offsetLeft-gutterPX, getCell(1).id);
							}
							handled = true;
						}
						else
							movingCell = false;
							
						break;

					case KEY_RIGHT:
						movingCell = true;
						var nextRight = srcNode.attributes.getNamedItem("nextright");
						if (nextRight)
						{					
							var scrollTarget = 0;
							var nextSpan = all[nextRight.value];
							var sl = scrollListTable.scrollLeft;
							if (gutterPX > 0)
								scrollTarget = nextSpan.offsetLeft + gutterPX + nextSpan.clientWidth - scrollListTable.clientWidth;
							else
								scrollTarget = nextSpan.offsetLeft - cellGapPX + nextSpan.clientWidth - scrollListTable.clientWidth;
							if (scrollTarget > sl)
								scroll(SCROLL_RIGHT, scrollTarget, nextSpan.id); 
							else
							{
								movingCell = false;
								var col = nextSpan.all.tags("a");
								if (col == null)
									nextSpan.focus();
								else
									col[0].focus();
							}	
							handled = true;
						}
						else
							movingCell = false;
							
						break;
				}
			}
			else
			{
				handled = true;
			}
				
			if (handled)
			{
				event.returnValue=false;
				event.cancelBubble=true;
				return false;
			}
			else
				return true;
		}

					
		function scrollLeft() 
		{
			if ( scrollListTable.scrollLeft > scrollIncrementPX )
				scrollListTable.scrollLeft -= scrollIncrementPX;
			else
				scrollListTable.scrollLeft = 0;
		}

		function scrollRight() 
		{
			scrollListTable.scrollLeft =
				 scrollListTable.scrollLeft + scrollIncrementPX;
		}

		function scroll(direction, target, cellToFocusID)
		{
			if ((direction == SCROLL_RIGHT && scrollListTable.scrollLeft < target) ||
				(direction == SCROLL_LEFT && scrollListTable.scrollLeft > target))
			{
				var nextLeft = scrollListTable.scrollLeft + scrollIncrementPX*direction;
				if ((direction == SCROLL_RIGHT && nextLeft > target) ||
					(direction == SCROLL_LEFT && nextLeft < target))
					scrollListTable.scrollLeft = target;
				else
					scrollListTable.scrollLeft = nextLeft;
				
				window.setTimeout(function(){scroll(direction, target, cellToFocusID);}, 1);
			}
			else
			{
				var shift = getCell(0).clientWidth;
				if (direction == SCROLL_RIGHT && shift <= scrollListTable.scrollLeft)
				{						
					
					moveCellToTheOtherEnd(0);
					scrollListTable.scrollLeft -= shift;
				}
				all[cellToFocusID].focus();
				movingCell = false;
			}
		}
		
		function moveCellToTheOtherEnd(cellIndexToMove)
		{
			var tempCell = getCell(cellIndexToMove);

			
			var attr = element.document.createAttribute("nextleft");
			var tag = getCell(0).attributes.getNamedItem("nextright").value;
			attr.value = CELL_TAG+((tag.substr(CELL_TAG.length)-2+getCellCount()) % getCellCount());
			getCell(0).attributes.setNamedItem(attr);
			
			
			scrollListTable.removeChild(tempCell);
			scrollListTable.insertBefore(tempCell, cellIndexToMove == 0 ? null : getCell(0));
			
			
			attr = element.document.createAttribute("nextleft");
			attr.value = "";
			getCell(0).attributes.setNamedItem(attr);				
		}
		
		
		function getCell(index)
		{
			return scrollListTable.children[index];
		}
					
		
		function getCellCount()
		{
			return (scrollListTable.children ? scrollListTable.children.length : 0);
		}
		
		
		function get_CellContent(index)
		{
			if (!bInit)
				return null;
			else
				return getCell(index).firstChild;
		}
</SCRIPT>
</PUBLIC:COMPONENT>